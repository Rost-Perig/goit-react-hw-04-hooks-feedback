{"version":3,"sources":["componets/Statistics/Statistics.module.css","componets/FeedbackOptions/FeedbackOptions.module.css","componets/Section/Section.js","componets/Statistics/Statistics.js","componets/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","Statistics","arr","Good","good","Neutral","neutral","Bad","bad","Total","total","posFeedback","isActivated","s","list","map","item","listItem","Object","keys","String","noGiven","FeedbackOptions","keysArr","incrementFoo","key","type","btn","onClick","str","split","splice","toUpperCase","join","App","useState","setGood","setNeutral","setBad","setIsActivated","setTotal","setPosFeedback","event","target","dataset","Math","round","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,6BAA6B,QAAU,8B,kBCApGD,EAAOC,QAAU,CAAC,IAAM,+B,sJCiBTC,EAfC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,kCACI,sBAAKC,UAAU,YAAf,UACI,6BAAKF,IACJC,Q,gBC0BEE,EA9BI,SAAC,GAA6D,IACvEC,EAAM,CAAC,CAAEC,KAD6D,EAA1DC,MACW,CAAEC,QAD6C,EAApDC,SAC2B,CAAEC,IADuB,EAA3CC,KACgC,CAAEC,MADS,EAAtCC,OAC6C,CAAE,oBADT,EAA/BC,cAE7C,OAF4E,EAAlBC,YAKhD,oBAAIZ,UAAWa,IAAEC,KAAjB,SACOZ,EAAIa,KAAI,SAAAC,GACL,OACI,qBAA6BhB,UAAWa,IAAEI,SAA1C,UACI,iCAAOC,OAAOC,KAAKH,GAAnB,OACgC,sBAA9BI,OAAOF,OAAOC,KAAKH,IACjB,+BAAOA,EAAKE,OAAOC,KAAKH,MACxB,iCAAOA,EAAKE,OAAOC,KAAKH,IAAxB,SAJEE,OAAOC,KAAKH,SAJrC,mBAAGhB,UAAWa,IAAEQ,QAAhB,gC,gBCoBEC,EAxBS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAChC,OACI,8BACKD,EAAQR,KAAI,SAAAU,GACT,OACI,wBAAQC,KAAK,SAAmB1B,UAAWa,IAAEc,IAAK,YAAWF,EAAKG,QAASJ,EAA3E,SAES,SAAyBK,GACtB,IAAI3B,EAAM2B,EAAIC,MAAM,IAEpB,OADA5B,EAAI6B,OAAO,EAAG,EAAG7B,EAAI,GAAG8B,eACjB9B,EAAI+B,KAAK,IAHnB,CAIER,IANgBA,SCFhC,SAASS,IACtB,MAAsBC,mBAAS,GAA/B,mBAAK/B,EAAL,KAAWgC,EAAX,KACA,EAA4BD,mBAAS,GAArC,mBAAK7B,EAAL,KAAc+B,EAAd,KACA,EAAoBF,mBAAS,GAA7B,mBAAK3B,EAAL,KAAU8B,EAAV,KACA,EAAsCH,oBAAS,GAA/C,mBAAOvB,EAAP,KAAoB2B,EAApB,KACA,EAAwBJ,mBAAS,GAAjC,mBAAKzB,EAAL,KAAY8B,EAAZ,KACA,EAAoCL,mBAAS,GAA7C,mBAAKxB,EAAL,KAAkB8B,EAAlB,KA6BA,OACE,sBAAKzC,UAAU,MAAf,UAEE,cAAC,EAAD,CAASF,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiByB,QA/BF,CAAC,OAAQ,UAAW,OA+BKC,aA7BvB,SAAAkB,GAErB,OADgBA,EAAMC,OAAOC,QAAQlB,MAEnC,IAAK,OACHU,EAAQhC,GAAQ,GAChBoC,EAAS9B,GAAS,GAClB,MACF,IAAK,UACH2B,EAAW/B,GAAW,GACtBkC,EAAS9B,GAAS,GAClB,MACF,IAAK,MACH4B,EAAO9B,GAAO,GACdgC,EAAS9B,GAAS,GAKtB+B,EAAyB,IAAV/B,EACb,EACAmC,KAAKC,MAAM1C,EAAOM,EAAQ,MAC5B6B,GAAe,QAWb,cAAC,EAAD,CAASzC,MAAO,aAAhB,SACE,cAAC,EAAD,CACEM,KAAMA,EACNE,QAASA,EACTE,IAAKA,EACLE,MAAOA,EACPC,YAAaA,EACbC,YAAaA,SClDvBmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1BC,QAAQC,IAAI,gJ","file":"static/js/main.b717bd5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2t0RU\",\"listItem\":\"Statistics_listItem__3wgxa\",\"noGiven\":\"Statistics_noGiven__1XIrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__nRGXh\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n        <div className=\"container\">\r\n            <h2>{title}</h2>\r\n            {children}\r\n         </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, posFeedback, isActivated }) => {\r\n    const arr = [{ Good: good }, { Neutral: neutral }, { Bad: bad }, { Total: total }, { 'Positive feedback': posFeedback }];\r\n    return (\r\n        !isActivated ?\r\n            (<p className={s.noGiven}>No feedback given</p> ) :\r\n            ( <ul className={s.list}>\r\n                    {arr.map(item => {\r\n                        return (\r\n                            <li key={ Object.keys(item)} className={s.listItem}>\r\n                                <span>{Object.keys(item)}:</span>\r\n                                {(String(Object.keys(item)) !== 'Positive feedback') ?\r\n                                    <span>{item[Object.keys(item)]}</span> :\r\n                                    <span>{item[Object.keys(item)]}%</span>}   \r\n                            </li> \r\n                        )\r\n                    })}\r\n                </ul>)\r\n    );\r\n    \r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    posFeedback: PropTypes.number,\r\n    isActivated: PropTypes.bool\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ keysArr, incrementFoo }) => {\r\n    return (\r\n        <div>\r\n            {keysArr.map(key => {\r\n                return (\r\n                    <button type=\"button\" key={key} className={s.btn} data-type={key} onClick={incrementFoo}>\r\n                        {\r\n                            (function toUpFirstLetter(str) {\r\n                                let arr = str.split('');\r\n                                arr.splice(0, 1, arr[0].toUpperCase())\r\n                                return arr.join('')\r\n                            })(key)\r\n                        }\r\n                    </button>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    key: PropTypes.string,\r\n};\r\n\r\nexport default FeedbackOptions;","\nimport { useState } from 'react';\nimport './App.css';\nimport Section from './componets/Section';\nimport Statistics from './componets/Statistics';\nimport FeedbackOptions from './componets/FeedbackOptions';\n\nexport default function App() {\n  let [good, setGood] = useState(0);\n  let [neutral, setNeutral] = useState(0);\n  let [bad, setBad] = useState(0);\n  const [isActivated, setIsActivated] = useState(false);\n  let [total, setTotal] = useState(0);\n  let [posFeedback, setPosFeedback] = useState(0);\n\n  const originalKeys = ['good', 'neutral', 'bad'];\n\n  const valueIncrement = event => {\n    const btnType = event.target.dataset.type;\n    switch (btnType) {\n      case 'good':\n        setGood(good += 1);\n        setTotal(total += 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral += 1);\n        setTotal(total += 1);\n        break;\n      case 'bad':\n        setBad(bad += 1);\n        setTotal(total += 1);\n        break;\n      default:\n        break;\n    };\n    setPosFeedback(total === 0 ?\n      0 :\n      Math.round(good / total * 100));\n    setIsActivated(true);\n  };\n\n\n  return (\n    <div className=\"App\">\n\n      <Section title={\"Please leave feedback\"}>\n        <FeedbackOptions keysArr={originalKeys} incrementFoo={valueIncrement} />\n      </Section>\n\n      <Section title={\"Statistics\"}>\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          posFeedback={posFeedback}\n          isActivated={isActivated}/>\n      </Section>\n      \n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nconsole.log('Привіт, світ! Життя химерне!');\n"],"sourceRoot":""}